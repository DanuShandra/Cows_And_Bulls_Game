# ------ Exercise 18: Cows And Bulls ------
# Create a program that will play the “cows and bulls” game with the user. The 
# game works like this:

# Randomly generate a 4-digit number. Ask the user to guess a 4-digit number. 
# For every digit that the user guessed correctly in the correct place, they 
# have a “cow”. For every digit the user guessed correctly in the wrong place is 
# a “bull.” Every time the user makes a guess, tell them how many “cows” and 
# “bulls” they have. Once the user guesses the correct number, the game is over. 
# Keep track of the number of guesses the user makes throughout teh game and tell 
# the user at the end.

# Say the number generated by the computer is 1038. An example interaction could 
# look like this:

# Welcome to the Cows and Bulls Game! 
# Enter a number: 
# >>> 1234
# 2 cows, 0 bulls
# >>> 1256
# 1 cow, 0 bull
# ...
# Until the user guesses the number.

import random

# REQUIRES: 2 integer lists; one from the user, the other from the computer
# EFFECTS: Compares the two lists and outputs a score depending on the places where 
# 		   the digits from the user list match the digits from the computer list
def calc_cows(user_num, comp_num):
	# Initialize variables
	num_cows = 0

	# Check if the position of the numbers match both lists and increase count
	if user_num[0] == comp_num[0]:
		num_cows += 1
	if user_num[1] == comp_num[1]:
		num_cows += 1
	if user_num[2] == comp_num[2]:
		num_cows += 1
	if user_num[3] == comp_num[3]:
		num_cows += 1
	
	return num_cows

# REQUIRES: 2 integer lists; one from the user, the other from the computer
# EFFECTS: Compares the two lists and outputs a score depending on how many digits 
# 		   from the user list appear in the computer list
def calc_bulls(user_num, comp_num):

	# Initalize variables and list
	bulls = 0

	# COunt how many numbers are in both lists AND in the wrong place
	for num in user_num:
		if num in comp_num:
			bulls += 1

	cows = calc_cows(user_num, comp_num)
	num_bulls = bulls - cows	

	return num_bulls

# Main function: ensures that variables that are created, functions that are 
# called, operations that are done, etc ONLY work when you directly run the file, 
# not when you import it into another file.
if __name__=="__main__":

	# Initalise variables
	count_attempts = 0    # Counter to track number of guess attempts

	# Computer generates a random 4 digit number
	comp_num = random.randint(1000, 9999)
	gen_num = [int(i) for i in str(comp_num)]

	# Explain Rules
	print("\nWelcome to the Cows and Bulls Game!\n")
	print("Rules:\n- A 4-digit number between [1000 and 9999] has been generated!")
	print("- Cows: For every digit that the user GUESSED CORRECTLY in the CORRECT PLACE")
	print("- Bulls: For every digit the user GUESSED CORRECTLY in the WRONG PLACE")
	print("- GOAL: Guess the generated number in the fewest attempts possible\n")
	
	while True:
		# Ask user for their guess
		guess = input('Enter a 4-digit number or type "exit" to quit game: ')
		
		# Account for any other inputs besides a 4-digit number
		if guess == 'exit':
			print("\nGame Over, the number was " + str(comp_num) + ".")
			break
		elif (int(guess) > 9999):
			print("Invalid number entered!")
		else:
			user_num = [int(i) for i in str(guess)]    # Convert input into list with int elements

		# Increase the  attempts counter by 1
		count_attempts += 1

		# Calculate the number of cows and bulls
		c = calc_cows(user_num, gen_num)
		b = calc_bulls(user_num, gen_num)

		# Print the number of cows and bulls
		print("\n>>> Guess: " + str(guess) + ", Cows: " + str(c) + ", Bulls: " + str(b) + "\n")

		# When the user has correctly guessed the number, exit the game
		if c == 4:
			print("Congratulations! You guessed the number in " + str(count_attempts) + " attempts!")
			break




